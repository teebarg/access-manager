[{"C:\\Users\\Altara 3\\Documents\\labs\\react\\react-netlify-lambda\\src\\index.js":"1","C:\\Users\\Altara 3\\Documents\\labs\\react\\react-netlify-lambda\\src\\App.js":"2","C:\\Users\\Altara 3\\Documents\\labs\\react\\react-netlify-lambda\\src\\reportWebVitals.js":"3","C:\\Users\\Altara 3\\Documents\\labs\\react\\react-netlify-lambda\\src\\unauthenticated-app.js":"4","C:\\Users\\Altara 3\\Documents\\labs\\react\\react-netlify-lambda\\src\\authenticated-app.js":"5","C:\\Users\\Altara 3\\Documents\\labs\\react\\react-netlify-lambda\\src\\context\\index.js":"6","C:\\Users\\Altara 3\\Documents\\labs\\react\\react-netlify-lambda\\src\\context\\auth-context.js":"7","C:\\Users\\Altara 3\\Documents\\labs\\react\\react-netlify-lambda\\src\\components\\lib.js":"8","C:\\Users\\Altara 3\\Documents\\labs\\react\\react-netlify-lambda\\src\\context\\user-context.js":"9","C:\\Users\\Altara 3\\Documents\\labs\\react\\react-netlify-lambda\\src\\utils\\auth-client.js":"10","C:\\Users\\Altara 3\\Documents\\labs\\react\\react-netlify-lambda\\src\\utils\\bootstrap.js":"11","C:\\Users\\Altara 3\\Documents\\labs\\react\\react-netlify-lambda\\src\\utils\\api-client.js":"12","C:\\Users\\Altara 3\\Documents\\labs\\react\\react-netlify-lambda\\src\\pages\\not-found.js":"13","C:\\Users\\Altara 3\\Documents\\labs\\react\\react-netlify-lambda\\src\\styles\\colors.js":"14","C:\\Users\\Altara 3\\Documents\\labs\\react\\react-netlify-lambda\\src\\pages\\list.js":"15","C:\\Users\\Altara 3\\Documents\\labs\\react\\react-netlify-lambda\\src\\styles\\media-queries.js":"16","C:\\Users\\Altara 3\\Documents\\labs\\react\\react-netlify-lambda\\src\\pages\\create.js":"17","C:\\Users\\Altara 3\\Documents\\labs\\react\\react-netlify-lambda\\src\\utils\\access-client.js":"18","C:\\Users\\Altara 3\\Documents\\labs\\react\\react-netlify-lambda\\src\\context\\access-context.js":"19","C:\\Users\\Altara 3\\Documents\\labs\\react\\react-netlify-lambda\\src\\components\\access-row.js":"20","C:\\Users\\Altara 3\\Documents\\labs\\react\\react-netlify-lambda\\src\\utils\\use-callback-status.js":"21","C:\\Users\\Altara 3\\Documents\\labs\\react\\react-netlify-lambda\\src\\pages\\login.js":"22"},{"size":559,"mtime":1609862191726,"results":"23","hashOfConfig":"24"},{"size":489,"mtime":1610313602073,"results":"25","hashOfConfig":"24"},{"size":362,"mtime":1608655762860,"results":"26","hashOfConfig":"24"},{"size":1890,"mtime":1610351723230,"results":"27","hashOfConfig":"24"},{"size":3244,"mtime":1609494816262,"results":"28","hashOfConfig":"24"},{"size":311,"mtime":1608743654857,"results":"29","hashOfConfig":"24"},{"size":1506,"mtime":1610313602073,"results":"30","hashOfConfig":"24"},{"size":2619,"mtime":1610313602073,"results":"31","hashOfConfig":"24"},{"size":526,"mtime":1610313602073,"results":"32","hashOfConfig":"24"},{"size":1093,"mtime":1610313975423,"results":"33","hashOfConfig":"24"},{"size":478,"mtime":1610313975423,"results":"34","hashOfConfig":"24"},{"size":927,"mtime":1609577582763,"results":"35","hashOfConfig":"24"},{"size":428,"mtime":1608748449053,"results":"36","hashOfConfig":"24"},{"size":416,"mtime":1608747006907,"results":"37","hashOfConfig":"24"},{"size":638,"mtime":1610358206263,"results":"38","hashOfConfig":"24"},{"size":179,"mtime":1608747006907,"results":"39","hashOfConfig":"24"},{"size":3067,"mtime":1610313975423,"results":"40","hashOfConfig":"24"},{"size":708,"mtime":1609252266505,"results":"41","hashOfConfig":"24"},{"size":2785,"mtime":1610313602073,"results":"42","hashOfConfig":"24"},{"size":3331,"mtime":1610295975983,"results":"43","hashOfConfig":"24"},{"size":1257,"mtime":1609257526996,"results":"44","hashOfConfig":"24"},{"size":2466,"mtime":1610313975423,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"llz4jq",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"48"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"48"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"48"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"48"},"C:\\Users\\Altara 3\\Documents\\labs\\react\\react-netlify-lambda\\src\\index.js",[],["95","96"],"C:\\Users\\Altara 3\\Documents\\labs\\react\\react-netlify-lambda\\src\\App.js",[],"C:\\Users\\Altara 3\\Documents\\labs\\react\\react-netlify-lambda\\src\\reportWebVitals.js",[],"C:\\Users\\Altara 3\\Documents\\labs\\react\\react-netlify-lambda\\src\\unauthenticated-app.js",["97","98","99"],"C:\\Users\\Altara 3\\Documents\\labs\\react\\react-netlify-lambda\\src\\authenticated-app.js",["100"],"/** @jsx jsx */\r\nimport { jsx } from \"@emotion/react\";\r\n\r\nimport styled from \"@emotion/styled\";\r\nimport { Router, Link, Redirect } from \"@reach/router\";\r\nimport * as mq from \"./styles/media-queries\";\r\nimport * as colors from \"./styles/colors\";\r\nimport { useAuth } from \"./context/auth-context\";\r\nimport { useUser } from \"./context/user-context\";\r\nimport List from \"./pages/list\";\r\nimport Create from \"./pages/create\";\r\nimport NotFound from \"./pages/not-found\";\r\nimport {ListItemProvider} from './context/access-context'\r\n\r\nfunction AuthenticatedApp() {\r\n  //   const user = useUser()\r\n  const user = { username: \"my uuu\" };\r\n  const { logout } = useAuth();\r\n  return (\r\n    <div\r\n      css={{\r\n        margin: \"0 auto\",\r\n        padding: \"2em 0\",\r\n        maxWidth: \"840px\",\r\n        width: \"100%\",\r\n        display: \"grid\",\r\n        gridGap: \"1em\",\r\n        gridTemplateColumns: \"3fr 9fr\",\r\n        [mq.small]: {\r\n          gridTemplateColumns: \"1fr\",\r\n          grodTemplateRows: \"auto\",\r\n          width: \"100%\",\r\n          padding: \"2em 1em\",\r\n        },\r\n      }}\r\n    >\r\n      <div>\r\n        <div\r\n          css={{\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            position: \"absolute\",\r\n            top: \"10px\",\r\n            right: \"10px\",\r\n          }}\r\n        >\r\n          {user.username}\r\n          <button\r\n            onClick={logout}\r\n            css={{\r\n              marginLeft: \"10px\",\r\n            }}\r\n          >\r\n            Logout\r\n          </button>\r\n        </div>\r\n        <Nav />\r\n      </div>\r\n      <main css={{ width: \"100%\" }}>\r\n        <Routes />\r\n      </main>\r\n      <footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nconst NavLink = styled(Link)({\r\n  display: \"block\",\r\n  padding: \"8px 15px 8px 10px\",\r\n  margin: \"5px 0\",\r\n  width: \"100%\",\r\n  height: \"100%\",\r\n  color: colors.text,\r\n  borderRadius: \"2px\",\r\n  borderLeft: \"5px solid transparent\",\r\n  \":hover\": {\r\n    color: colors.indigo,\r\n    textDecoration: \"none\",\r\n    background: colors.gray10,\r\n  },\r\n});\r\n\r\nfunction Nav(params) {\r\n  return (\r\n    <nav\r\n      css={{\r\n        position: \"sticky\",\r\n        top: \"2em\",\r\n        padding: \"3em 1.5em\",\r\n        border: `1px solid ${colors.gray10}`,\r\n        borderRadius: \"3px\",\r\n        [mq.small]: {\r\n          padding: \"0.5em 1em\",\r\n          position: \"static\",\r\n        },\r\n      }}\r\n    >\r\n      <ul\r\n        css={{\r\n          listStyle: \"none\",\r\n          padding: \"0\",\r\n          '& [aria-current=\"page\"]': {\r\n            borderLeft: `5px solid ${colors.indigo}`,\r\n            background: colors.gray10,\r\n            \":hover\": {\r\n              background: colors.gray10,\r\n            },\r\n          },\r\n        }}\r\n      >\r\n        <li>\r\n          <NavLink to=\"/list\">Access List</NavLink>\r\n        </li>\r\n        <li>\r\n          <NavLink to=\"/create\">Create Accesss</NavLink>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n}\r\n\r\nfunction RedirectHome() {\r\n  return <Redirect to=\"/list\" />;\r\n}\r\n\r\nfunction Routes() {\r\n  return (\r\n    <ListItemProvider>\r\n      <Router>\r\n        <RedirectHome path=\"/\" />\r\n        <List path=\"/list\" />\r\n        <Create path=\"/create\" />\r\n        {/* <BookScreen path=\"/book/:bookId\" /> */}\r\n        <NotFound default />\r\n      </Router>\r\n    </ListItemProvider>\r\n  );\r\n}\r\n\r\nexport default AuthenticatedApp;\r\n","C:\\Users\\Altara 3\\Documents\\labs\\react\\react-netlify-lambda\\src\\context\\index.js",[],"C:\\Users\\Altara 3\\Documents\\labs\\react\\react-netlify-lambda\\src\\context\\auth-context.js",[],"C:\\Users\\Altara 3\\Documents\\labs\\react\\react-netlify-lambda\\src\\components\\lib.js",[],"C:\\Users\\Altara 3\\Documents\\labs\\react\\react-netlify-lambda\\src\\context\\user-context.js",["101"],"import React from \"react\";\r\nimport { useAuth } from \"./auth-context\";\r\n\r\nconst UserContext = React.createContext();\r\n\r\nfunction UserProvider(props) {\r\n  const {\r\n    data: { user },\r\n  } = useAuth();\r\n  const d = useAuth();\r\n  return <UserContext.Provider value={user} {...props} />;\r\n}\r\n\r\nfunction useUser() {\r\n  const context = React.useContext(UserContext);\r\n  if (context === undefined) {\r\n    throw new Error(`useUser must be used within a UserProvider`);\r\n  }\r\n  return context;\r\n}\r\n\r\nexport { UserProvider, useUser };\r\n","C:\\Users\\Altara 3\\Documents\\labs\\react\\react-netlify-lambda\\src\\utils\\auth-client.js",[],"C:\\Users\\Altara 3\\Documents\\labs\\react\\react-netlify-lambda\\src\\utils\\bootstrap.js",[],"C:\\Users\\Altara 3\\Documents\\labs\\react\\react-netlify-lambda\\src\\utils\\api-client.js",[],"C:\\Users\\Altara 3\\Documents\\labs\\react\\react-netlify-lambda\\src\\pages\\not-found.js",[],"C:\\Users\\Altara 3\\Documents\\labs\\react\\react-netlify-lambda\\src\\styles\\colors.js",[],"C:\\Users\\Altara 3\\Documents\\labs\\react\\react-netlify-lambda\\src\\pages\\list.js",[],"C:\\Users\\Altara 3\\Documents\\labs\\react\\react-netlify-lambda\\src\\styles\\media-queries.js",[],"C:\\Users\\Altara 3\\Documents\\labs\\react\\react-netlify-lambda\\src\\pages\\create.js",["102"],"import React, { useState } from \"react\";\r\nimport {\r\n  useListItemDispatch,\r\n  useSingleListItemState,\r\n  addListItem,\r\n} from \"../context/access-context\";\r\nimport * as colors from \"../styles/colors\";\r\nimport {\r\n  Button,\r\n  Spinner,\r\n  FormGroup,\r\n  FormInput,\r\n  FormSelect,\r\n  Label,\r\n} from \"../components/lib\";\r\nimport { FaMinusCircle, FaTimesCircle } from \"react-icons/fa\";\r\nimport useCallbackStatus from \"../utils/use-callback-status\";\r\nimport { useNavigate } from \"@reach/router\";\r\n\r\nfunction AddButton({ label, highlight, onClick, disabled, icon, ...rest }) {\r\n  const { isPending, isRejected, run } = useCallbackStatus();\r\n  const navigate = useNavigate();\r\n\r\n  async function handleClick() {\r\n    await run(onClick());\r\n    navigate(`/list`);\r\n  }\r\n\r\n  return (\r\n    <Button\r\n      css={{\r\n        \":hover,:focus\": { color: isPending ? colors.gray80 : highlight },\r\n      }}\r\n      disabled={disabled || isPending}\r\n      onClick={handleClick}\r\n      {...rest}\r\n    >\r\n      {isPending ? <Spinner /> : isRejected ? <FaTimesCircle /> : icon} Add\r\n    </Button>\r\n  );\r\n}\r\n\r\nexport default function Create() {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [title, setTitle] = useState(\"\");\r\n  const [partner, setPartner] = useState(\"self\");\r\n  const dispatch = useListItemDispatch();\r\n\r\n  function handleAddClick(e) {\r\n    return addListItem(dispatch, { username, password, title, partner });\r\n  }\r\n\r\n  function isDisabled() {\r\n    return !Boolean(username) || !Boolean(password) || !Boolean(title) || !Boolean(partner);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h3>Add new Access</h3>\r\n      <form>\r\n        <FormGroup>\r\n          <Label>Title</Label>\r\n          <FormInput\r\n            type=\"text\"\r\n            name=\"title\"\r\n            value={title}\r\n            onChange={(e) => setTitle(e.target.value)}\r\n          />\r\n        </FormGroup>\r\n        <FormGroup>\r\n          <Label>User Identification</Label>\r\n          <FormInput\r\n            type=\"text\"\r\n            name=\"username\"\r\n            value={username}\r\n            onChange={(e) => setUsername(e.target.value)}\r\n          />\r\n        </FormGroup>\r\n        <FormGroup>\r\n          <Label>Password</Label>\r\n          <FormInput\r\n            type=\"text\"\r\n            name=\"password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n        </FormGroup>\r\n        <FormGroup>\r\n          <Label>Partner</Label>\r\n          <FormSelect\r\n            name=\"partner\"\r\n            value={partner}\r\n            onChange={(e) => setPartner(e.target.value)}\r\n          >\r\n            <option value=\"\">Choose an Option</option>\r\n            <option value=\"self\">Self</option>\r\n            <option value=\"altara\">Altara</option>\r\n            <option value=\"smng\">SmNG</option>\r\n          </FormSelect>\r\n        </FormGroup>\r\n        <AddButton\r\n          onClick={handleAddClick}\r\n          disabled={isDisabled()}\r\n          icon={<FaMinusCircle />}\r\n        />\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Altara 3\\Documents\\labs\\react\\react-netlify-lambda\\src\\utils\\access-client.js",[],"C:\\Users\\Altara 3\\Documents\\labs\\react\\react-netlify-lambda\\src\\context\\access-context.js",[],"C:\\Users\\Altara 3\\Documents\\labs\\react\\react-netlify-lambda\\src\\components\\access-row.js",[],"C:\\Users\\Altara 3\\Documents\\labs\\react\\react-netlify-lambda\\src\\utils\\use-callback-status.js",[],"C:\\Users\\Altara 3\\Documents\\labs\\react\\react-netlify-lambda\\src\\pages\\login.js",["103","104"],"/** @jsx jsx */\r\nimport { jsx } from \"@emotion/react\";\r\n\r\nimport React, { useState } from \"react\";\r\nimport { useAuth } from \"../context/auth-context\";\r\nimport {\r\n  Button,\r\n  Spinner,\r\n  FormGroup,\r\n  FormInput,\r\n  Label,\r\n} from \"../components/lib\";\r\nimport { FaMinusCircle, FaTimesCircle } from \"react-icons/fa\";\r\nimport useCallbackStatus from \"../utils/use-callback-status\";\r\n// import { useNavigate } from \"@reach/router\";\r\nimport * as colors from \"../styles/colors\";\r\n\r\nimport { Link } from \"@reach/router\";\r\n\r\nfunction AddButton({ label, highlight, onClick, disabled, icon, ...rest }) {\r\n  const { isPending, isRejected, run } = useCallbackStatus();\r\n  // const navigate = useNavigate();\r\n  console.log(disabled);\r\n\r\n  async function handleClick() {\r\n    await run(onClick());\r\n  }\r\n\r\n  return (\r\n    <Button\r\n      css={{\r\n        \":hover,:focus\": { color: isPending ? colors.gray80 : highlight },\r\n        marginTop: 10,\r\n        width: '100%'\r\n      }}\r\n      disabled={disabled || isPending}\r\n      onClick={handleClick}\r\n      {...rest}\r\n    >\r\n      {isPending ? <Spinner /> : isRejected ? <FaTimesCircle /> : icon} Login\r\n    </Button>\r\n  );\r\n}\r\n\r\nfunction Login() {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const { login } = useAuth();\r\n\r\n  function handleAddClick() {\r\n    return login({ email, password });\r\n  }\r\n\r\n  function isDisabled() {\r\n    return !Boolean(email) || !Boolean(password);\r\n  }\r\n\r\n  return (\r\n    <div\r\n      css={{\r\n        padding: 30,\r\n      }}\r\n      className=\"elevate\"\r\n    >\r\n      <div>\r\n        <h3\r\n          css={{\r\n            textAlign: \"center\",\r\n          }}\r\n        >\r\n          Login Here\r\n        </h3>\r\n        <form>\r\n          <FormGroup>\r\n            <Label>Email</Label>\r\n            <FormInput\r\n              type=\"text\"\r\n              name=\"email\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            />\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label>Password</Label>\r\n            <FormInput\r\n              type=\"text\"\r\n              name=\"password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            />\r\n          </FormGroup>\r\n          <AddButton\r\n            onClick={handleAddClick}\r\n            disabled={isDisabled()}\r\n            icon={<FaMinusCircle />}\r\n          />\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n",{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","severity":1,"message":"110","line":4,"column":8,"nodeType":"111","messageId":"112","endLine":4,"endColumn":13},{"ruleId":"113","severity":1,"message":"114","line":28,"column":9,"nodeType":"115","endLine":32,"endColumn":11},{"ruleId":"113","severity":1,"message":"114","line":69,"column":13,"nodeType":"115","endLine":73,"endColumn":15},{"ruleId":"109","severity":1,"message":"116","line":9,"column":10,"nodeType":"111","messageId":"112","endLine":9,"endColumn":17},{"ruleId":"109","severity":1,"message":"117","line":10,"column":9,"nodeType":"111","messageId":"112","endLine":10,"endColumn":10},{"ruleId":"109","severity":1,"message":"118","line":4,"column":3,"nodeType":"111","messageId":"112","endLine":4,"endColumn":25},{"ruleId":"109","severity":1,"message":"110","line":4,"column":8,"nodeType":"111","messageId":"112","endLine":4,"endColumn":13},{"ruleId":"109","severity":1,"message":"119","line":18,"column":10,"nodeType":"111","messageId":"112","endLine":18,"endColumn":14},"no-native-reassign",["120"],"no-negated-in-lhs",["121"],"no-unused-vars","'React' is defined but never used.","Identifier","unusedVar","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'useUser' is defined but never used.","'d' is assigned a value but never used.","'useSingleListItemState' is defined but never used.","'Link' is defined but never used.","no-global-assign","no-unsafe-negation"]